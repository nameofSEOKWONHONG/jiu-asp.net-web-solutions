// <auto-generated />
using System;
using Application.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Application.Migrations
{
    [DbContext(typeof(JIUDbContext))]
    [Migration("20220119053912_20220118_1")]
    partial class _20220118_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.System.Config.TB_MIGRAION", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("COMPLETE_YN")
                        .HasColumnType("bit");

                    b.Property<bool>("MIGRATION_YN")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UPDATE_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("UPDATE_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("WRITE_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("WRITE_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("WRITE_ID", "WRITE_DT", "UPDATE_ID", "UPDATE_DT");

                    b.ToTable("TB_MIGRAION");
                });

            modelBuilder.Entity("Domain.Entities.TB_ROLE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ROLE_PERMISSIONID")
                        .HasColumnType("int");

                    b.Property<string>("ROLE_TYPE")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UPDATE_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("UPDATE_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("WRITE_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("WRITE_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ROLE_PERMISSIONID");

                    b.HasIndex("WRITE_ID", "WRITE_DT", "UPDATE_ID", "UPDATE_DT");

                    b.ToTable("TB_ROLE");
                });

            modelBuilder.Entity("Domain.Entities.TB_ROLE_PERMISSION", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ROLE_PERMISSION_TYPES")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UPDATE_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("UPDATE_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("WRITE_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("WRITE_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("WRITE_ID", "WRITE_DT", "UPDATE_ID", "UPDATE_DT");

                    b.ToTable("TB_ROLE_PERMISSION");
                });

            modelBuilder.Entity("Domain.Entities.TB_TODO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CONTENTS")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NOTIFY_DT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UPDATE_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("UPDATE_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("WRITE_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("WRITE_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("CONTENTS");

                    b.HasIndex("WRITE_ID", "WRITE_DT", "UPDATE_ID", "UPDATE_DT");

                    b.ToTable("TB_TODO");
                });

            modelBuilder.Entity("Domain.Entities.TB_USER", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ACTIVE_USER_YN")
                        .HasColumnType("bit");

                    b.Property<bool>("AUTO_CONFIRM_EMAIL_YN")
                        .HasColumnType("bit");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PASSWORD")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PHONE_NUM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ROLEID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATE_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("UPDATE_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("WRITE_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("WRITE_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ROLEID");

                    b.HasIndex("EMAIL", "ACTIVE_USER_YN", "AUTO_CONFIRM_EMAIL_YN");

                    b.HasIndex("WRITE_ID", "WRITE_DT", "UPDATE_ID", "UPDATE_DT");

                    b.ToTable("TB_USER");
                });

            modelBuilder.Entity("Domain.Entities.TB_ROLE", b =>
                {
                    b.HasOne("Domain.Entities.TB_ROLE_PERMISSION", "ROLE_PERMISSION")
                        .WithMany()
                        .HasForeignKey("ROLE_PERMISSIONID");

                    b.Navigation("ROLE_PERMISSION");
                });

            modelBuilder.Entity("Domain.Entities.TB_USER", b =>
                {
                    b.HasOne("Domain.Entities.TB_ROLE", "ROLE")
                        .WithMany()
                        .HasForeignKey("ROLEID");

                    b.Navigation("ROLE");
                });
#pragma warning restore 612, 618
        }
    }
}
